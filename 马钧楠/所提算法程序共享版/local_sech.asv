
function NPEFF=local_sech(AC,M,k,X)

NPEFF=[];
s1=size(AC,1);
refs=AC(jj,1:k);
addr=find(refs==1);
s3=size(addr,1);
if s3>2
    s4=ceil(rand*s3);
    s5=ceil(rand*s3);
    while s5==s4
        s5=ceil(rand*s3);
    end
    
    NEW1=refs;NEW2=refs;
    NEW1(addr(s4))=0;
    NEW2(addr(s5))=0;
    N1EFF=evaluation(NEW1,k,X);
    N2EFF=evaluation(NEW2,k,X);
    if N1EFF(k+2)>N2EFF(k+2)
        flg1=s4;flg2=s5;
    else
        flg1=s5;flg2=s4;
    end
    
    s6=ceil(rand*s1);
    cand=AC(s6,1:k);
    if cand(flg1)==1 & cand(flg2)==1
        cand(flg2)=0;
    elseif cand(flg1)==0 & cand(flg2)==0
        cand(flg1)=1;
    elseif  cand(flg1)==1 & cand(flg2)==0
        cand(flg1)=0;
    else
        cand(flg2)=0;
    end
    
    CEFF=evaluation(cand,k,X);
    NPEFF=[NPEFF;N1EFF;N2EFF;CEFF];
end


    

else
    s1=size(AC,1);
    lsize=s1-1;
    crowd_value=calcul_crowd(AC,M,k);
    [val,ind]=sort(crowd_value);
    BVT=AC(ind(s1),:);
    
    newpop=[];
    for i=1:lsize
        a1=ceil(rand*s1);
        did1=abs(BVT(1:k)-AC(a1,1:k));
        ff1=0.5*(abs(BVT(k+2)+AC(a1,k+2)))/sum(did1);
        
        a2=ceil(rand*s1);
        did2=abs(BVT(1:k)-AC(a2,1:k));
        ff2=0.5*(abs(BVT(k+2)+AC(a2,k+2)))/sum(did2);
        
        if ff1>ff2
            cand=AC(a1,:);
            flg=did1;
        else
            cand=AC(a2,:);
            flg=did2;
        end
        addr=find(flg==1);
        s3=size(addr,1);
        if s3>1
            for hh=1:s3
                cand(addr(hh))=round(rand);
            end
        end
        
        addr1=find(flg==0);
        s6=size(addr1,1);
        s7=ceil(rand*s6);
        cand(addr1(s7))=round(rand);
        newpop=[newpop;cand];
    end
    NPEFF=evaluation(newpop,k,X);
end













% if rand>0.5
%     NPEFF=[];
%     s1=size(AC,1);
%     for jj=1:s1
%         refs=AC(jj,1:k);
%         addr=find(refs==1);
%         s3=size(addr,1);
%         if s3>2
%             s4=ceil(rand*s3);
%             s5=ceil(rand*s3);
%             while s5==s4
%                 s5=ceil(rand*s3);
%             end
%             
%             NEW1=refs;NEW2=refs;
%             NEW1(addr(s4))=0;
%             NEW2(addr(s5))=0;
%             N1EFF=evaluation(NEW1,k,X);
%             N2EFF=evaluation(NEW2,k,X);
%             if N1EFF(k+2)>N2EFF(k+2)
%                 flg1=s4;flg2=s5;
%             else
%                 flg1=s5;flg2=s4;
%             end
%             
%             s6=ceil(rand*s1);
%             cand=AC(s6,1:k);
%             if cand(flg1)==1 & cand(flg2)==1
%                 cand(flg2)=0;
%             elseif cand(flg1)==0 & cand(flg2)==0
%                 cand(flg1)=1;
%             elseif  cand(flg1)==1 & cand(flg2)==0
%                 cand(flg1)=0;
%             else
%                 cand(flg2)=0;
%             end
%             
%             CEFF=evaluation(cand,k,X);
%             NPEFF=[NPEFF;N1EFF;N2EFF;CEFF];
%         end
%     end
%     
% else
%     s1=size(AC,1);
%     lsize=s1-1;
%     crowd_value=calcul_crowd(AC,M,k);
%     [val,ind]=sort(crowd_value);
%     BVT=AC(ind(s1),:);
%     
%     newpop=[];
%     for i=1:lsize
%         a1=ceil(rand*s1);
%         did1=abs(BVT(1:k)-AC(a1,1:k));
%         ff1=0.5*(abs(BVT(k+2)+AC(a1,k+2)))/sum(did1);
%         
%         a2=ceil(rand*s1);
%         did2=abs(BVT(1:k)-AC(a2,1:k));
%         ff2=0.5*(abs(BVT(k+2)+AC(a2,k+2)))/sum(did2);
%         
%         if ff1>ff2
%             cand=AC(a1,:);
%             flg=did1;
%         else
%             cand=AC(a2,:);
%             flg=did2;
%         end
%         addr=find(flg==1);
%         s3=size(addr,1);
%         if s3>1
%             for hh=1:s3
%                 cand(addr(hh))=round(rand);
%             end
%         end
%         
%         addr1=find(flg==0);
%         s6=size(addr1,1);
%         s7=ceil(rand*s6);
%         cand(addr1(s7))=round(rand);
%         newpop=[newpop;cand];
%     end
%     NPEFF=evaluation(newpop,k,X);
% end








% ss1=size(AC,1);
% crowd_value=calcul_crowd(AC,M,k);
% a1=ceil(rand*ss1);
% a2=ceil(rand*ss1);
% if crowd_value(a1)> crowd_value(a2)
%     BASED=AC(a1,:);
% else
%     BASED=AC(a2,:);
% end
%
% if rand>0.5
%     addr=find(BASED==1);
%     s2=size(addr,2);
%     if s2>1
%         for i=1:s2
%             RB1=BASED;
%             RB1(addr(i))=0;
%             EFB1=evaluation(RB1,k,X);
%             if EFB1(k+2)<=BASED(k+2)
%                 BASED=EFB1;
%                 break;
%             end
%         end
%     end
% else
%     addr=find(BASED==0);
%     s2=size(addr,2);
%     if s2>1
%         for i=1:s2
%             RB1=BASED;
%             RB1(addr(i))=1;
%             EFB1=evaluation(RB1,k,X);
%             if EFB1(k+2)<BASED(k+2)
%                 BASED=EFB1;
%                 break;
%             end
%         end
%     end
% end
% BEST=BASED;



% gg=max(sum(AC(:,1:k)'));
%
% s1=size(AC,1);
% MM=sum(AC(:,1:k));
% deep=MM/s1+1/k;
% dim=1:k;
% BEST=[];
% for i=1:gg
%     sel_dim1=rouletteSelect11(dim,deep,i);
%     sel_dim2=rouletteSelect11(dim,deep,i);
%     BASED1=zeros(1,k); BASED2=zeros(1,k);
%     BASED1(sel_dim1)=1; BASED2(sel_dim2)=1;
%     B1EFF=evaluation(BASED1,k,X);
%     B2EFF=evaluation(BASED2,k,X);
%     if B1EFF(k+2)<=B2EFF(k+2)
%         BEST=[BEST;B1EFF];
%     else
%         BEST=[BEST;B2EFF];
%     end
% end
%
%





        